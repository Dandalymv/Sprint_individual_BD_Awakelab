-- MySQL Script generated by MySQL Workbench
-- Tue Oct  5 21:53:22 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Sprint_Individual_BD
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Sprint_Individual_BD
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Sprint_Individual_BD` DEFAULT CHARACTER SET utf8 ;
USE `Sprint_Individual_BD` ;

-- -----------------------------------------------------
-- Table `Sprint_Individual_BD`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Sprint_Individual_BD`.`usuarios` (
  `idusuario` INT NOT NULL,
  `nombre` VARCHAR(30) NULL,
  `apellido` VARCHAR(30) NULL,
  `edad` INT NULL,
  `correo_electronico` VARCHAR(50) NULL,
  `ingresos` INT NULL DEFAULT '1',
  PRIMARY KEY (`idusuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Sprint_Individual_BD`.`operarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Sprint_Individual_BD`.`operarios` (
  `idoperario` INT NOT NULL,
  `nombre` VARCHAR(30) NULL,
  `apellido` VARCHAR(30) NULL,
  `edad` INT NULL,
  `correo_electronico` VARCHAR(50) NULL,
  `tickets` INT NULL DEFAULT 1,
  PRIMARY KEY (`idoperario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Sprint_Individual_BD`.`tickets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Sprint_Individual_BD`.`tickets` (
  `idticket` INT NOT NULL,
  `idoperario` INT NULL,
  `idusuario` INT NULL,
  `fecha_incidente` DATE NULL,
  `evaluacion` INT NULL,
  PRIMARY KEY (`idticket`),
  INDEX `FK_usuarios_idx` (`idusuario` ASC) VISIBLE,
  INDEX `FK_operarios_idx` (`idoperario` ASC) VISIBLE,
  CONSTRAINT `FK_usuarios`
    FOREIGN KEY (`idusuario`)
    REFERENCES `Sprint_Individual_BD`.`usuarios` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_operarios`
    FOREIGN KEY (`idoperario`)
    REFERENCES `Sprint_Individual_BD`.`operarios` (`idoperario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

/*Construya una base de datos. Asigne un usuario con todos los privilegios. Construya las tablas.*/


/* Agregue 5 usuarios*/
insert into usuarios 
values (1,'Juanito', 'Alarcon', 33, 'juanito.alarcon@correeito.com', 2), 
(2,'Carmela', 'Jacinta', 30, 'camelita@correeito.com', 1), 
(3,'Claudia', 'Castillo', 21, 'claudia.castillo@correeito.com', 1),
(4,'Miguel', 'Angelo', 45, 'm.angelo@cosrreeito.com', 4),
(5,'Pedro', 'Cerda', 40, 'peter@correeito.com', 2);

/* 5 operadores*/ 
insert into operarios 
values (101, 'Javier', 'Gutierrez', 34, 'j.guti@soporte.cl', 1),
(102, 'Williams', 'Ferrada', 33, 'j.willi@soporte.cl', 3),
(103, 'Federico', 'Hernandez', 30, 'f.hernand@soporte.cl', 1),
(104, 'Carmelo', 'Lazo', 21, 'lazo.carmerlo@soporte.cl', 2),
(105, 'Camila', 'Basualto', 25, 'camila@soporte.cl', 3);

/*10 operaciones de soporte. Los datos debe crearlos según su imaginación.*/
insert into tickets 
values (1, 101, 1, '2021-05-10', 7),
(2, 102, 2, '2021-04-20', 5),
(3, 102, 2, '2021-02-15', 5),
(4, 102, 3, '2021-07-12', 3),
(5, 103, 4, '2021-10-04', 1),
(6, 104, 4, '2021-02-07', 1),
(7, 104, 4, '2021-06-09', 6),
(8, 105, 4, '2021-06-26', 6),
(9, 105, 2, '2021-07-29', 4),
(10, 105, 2, '2021-04-25', 4);


/*Seleccione las 3 operaciones con mejor evaluación.*/
select * from tickets order by evaluacion desc limit 3;

/*Seleccione las 3 operaciones con menos evaluación.*/
select * from tickets order by evaluacion asc limit 3;

/*Seleccione al operario que más soportes ha realizado.*/
select idoperario, count(*) from tickets group by idoperario order by count(*) desc limit 1;

/*Seleccione al cliente que menos veces ha utilizado la aplicación.*/
select * from usuarios order by ingresos asc limit 1;

/*Agregue 10 años a los tres primeros usuarios registrados.*/
start transaction;
set autocommit=0;
update usuarios set edad = edad + 10 where idusuario in 
(1,2,3);
select * from usuarios order by idusuario asc limit 3;
set autocommit=1;

/*Renombre todas las columnas ‘correo electrónico’. El nuevo nombre debe ser email.*/
alter table usuarios rename column correo_electronico to email;
alter table operarios rename column correo_electronico to email;

/*Seleccione solo los operarios mayores de 20 años.*/
select * from operarios where edad > 20;
